name: Extract and Translate i18n Strings

on:
    schedule:
        - cron: '0 1 * * *'
    push:
      branches:
        - i18n-marketplace-packages
    workflow_dispatch:

permissions:
    id-token: write
    contents: write
    pull-requests: write

env:
    BRANCH_NAME: 'automated-i18n'
    BASE_BRANCH: 'main'
    FRONTEND_REPO: 'atlanhq/atlan-frontend'

jobs:
    extract-and-translate:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout i18n repository
              uses: actions/checkout@v4
              with:
                ref: ${{ env.BASE_BRANCH }}

            # Now checkout the i18n repo
            - name: Check if branch exists in i18n repo
              id: check-branch-exists
              uses: GuillaumeFalourd/branch-exists@v1.1
              with:
                  branch: ${{ env.BRANCH_NAME }}

            - name: Fail if branch already exists
              if: steps.check-branch-exists.outputs.exists == 'true'
              run: |
                echo "::error::The branch '${{ env.BRANCH_NAME }}' already exists. Please delete or merge the existing branch before running this workflow again."
                exit 0

            - name: Create & checkout branch in i18n repo
              run: git checkout -b $BRANCH_NAME

            - name: Configure git
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: 'pnpm'

#            - name: Install i18n packages
#              run: pnpm install
#              env:
#                ORG_PAT_GITHUB: ${{ secrets.ORG_PAT_GITHUB }}
#
#            # First checkout the frontend repo to scan for new strings
#            - name: Checkout frontend repository
#              uses: actions/checkout@v4
#              with:
#                repository: ${{ env.FRONTEND_REPO }}
#                token: ${{ secrets.ORG_PAT_GITHUB }}
#                path: frontend
#                ref: develop
#
#            - name: Run translation script
#              run: node scripts/translationScript.mjs
#              env:
#                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#                  BASE_DIRECTORY: ${{ github.workspace }}

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                name: 'translatable-strings'
                repository: 'atlanhq/marketplace-packages'
                github-token: ${{ secrets.ORG_PAT_GITHUB }}
                path: artifacts
                run-id: '16022328966'

            - name: Run artifact translation script
              run: node scripts/translateArtifact.mjs
              env:
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                BASE_DIRECTORY: ${{ github.workspace }}
                ARTIFACT_PATH: ./artifacts/translatable-strings.json

            - name: Run prettier
              run: pnpm prettier --write src/locales/**/*.json

            - name: Stage, commit and push changes
              run: |
                  rm -rf frontend
                  git add .
                  git commit -m "chore: update i18n strings" -m "Automated extraction of new i18n strings from frontend"
                  git push origin $BRANCH_NAME

            - name: Create PR if needed
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  gh pr create --base ${{ env.BASE_BRANCH }} --head $BRANCH_NAME \
                  --title "chore: update i18n strings" \
                  --body "This PR contains new i18n strings extracted from the frontend repository and their translations.

                  ## Changes
                  - Number of new strings: ${{ steps.check_changes.outputs.new_strings }}
                  
                  Note: Version bump will be handled by the release workflow after merging."
